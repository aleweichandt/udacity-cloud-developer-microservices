apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: backend-user
  name: backend-user
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
  template:
    metadata:
      labels:
        service: backend-user
    spec:
      containers:
      - image: aleweichandt/udacity-restapi-user
        name: backend-user
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /status
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: DB_HOST
        - name: DB_DIALECT
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: DB_DIALECT
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: DB_PASSWORD
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: DB_USER      
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret 